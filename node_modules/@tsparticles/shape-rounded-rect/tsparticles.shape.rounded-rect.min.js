/*! For license information please see tsparticles.shape.rounded-rect.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var o="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},o={};function r(e){var i=o[e];if(void 0!==i)return i.exports;var n=o[e]={exports:{}};return t[e](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};r.r(i),r.d(i,{loadRoundedRectShape:()=>c});var n=r(303);const a=Math.sqrt(2);class d{constructor(){this.validTypes=["rounded-rect"]}draw(e){const{context:t,particle:o,radius:r}=e,i=r/a,n=2*i,d=o.borderRadius??5;"roundRect"in t?t.roundRect(-i,-i,n,n,d):function(e,t,o,r){const i={x:-t,y:-t,height:o,width:o},n=r,a=r,d=r,c=r,{x:s,y:u,width:p,height:l}=i,f=s+p,y=u+l;e.moveTo(s+n,u),e.lineTo(f-a,u),e.quadraticCurveTo(f,u,f,u+a),e.lineTo(f,u+l-c),e.quadraticCurveTo(f,y,f-c,y),e.lineTo(s+d,y),e.quadraticCurveTo(s,y,s,y-d),e.lineTo(s,u+n),e.quadraticCurveTo(s,u,s+n,u)}(t,i,n,d)}particleInit(e,t){const o=t.shapeData;t.borderRadius=(0,n.getRangeValue)(o?.radius??5)*e.retina.pixelRatio}}async function c(e,t=!0){e.checkVersion("3.8.1"),await e.addShape(new d,t)}return i})()));