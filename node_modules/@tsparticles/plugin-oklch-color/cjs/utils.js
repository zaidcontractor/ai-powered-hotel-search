"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lchToRgb = lchToRgb;
exports.lchaToRgba = lchaToRgba;
exports.oklchToRgb = oklchToRgb;
exports.oklchaToRgba = oklchaToRgba;
exports.getStyleFromOklch = getStyleFromOklch;
const engine_1 = require("@tsparticles/engine");
const rgbFactor = 255, fullDegree = 360;
function lchToRgb(lch) {
    const l = lch.l / engine_1.percentDenominator, c = lch.c, h = lch.h / fullDegree, result = { r: 0, g: 0, b: 0 };
    result.r = Math.floor(l * rgbFactor);
    result.g = Math.floor(c * rgbFactor);
    result.b = Math.floor(h * rgbFactor);
    return result;
}
function lchaToRgba(lcha) {
    return {
        a: lcha.a,
        ...lchToRgb(lcha),
    };
}
function oklchToRgb(oklch) {
    const l = oklch.l / engine_1.percentDenominator, c = oklch.c / engine_1.percentDenominator, h = oklch.h / fullDegree, result = { r: 0, g: 0, b: 0 };
    result.r = Math.floor(l * rgbFactor);
    result.g = Math.floor(c * rgbFactor);
    result.b = Math.floor(h * rgbFactor);
    return result;
}
function oklchaToRgba(oklcha) {
    return {
        a: oklcha.a,
        ...oklchToRgb(oklcha),
    };
}
function getStyleFromOklch(color, opacity) {
    const { l, c, h } = color, alpha = opacity !== undefined ? `, ${opacity}` : "";
    return `oklch(${l}%, ${c}%, ${h}Â°${alpha})`;
}
