(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@tsparticles/engine"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loadEasingExpoPlugin = loadEasingExpoPlugin;
    const engine_1 = require("@tsparticles/engine");
    async function loadEasingExpoPlugin(engine, refresh = true) {
        engine.checkVersion("3.8.1");
        await engine.addEasing(engine_1.EasingType.easeInExpo, value => (!value ? 0 : 2 ** (10 * value - 10)), false);
        await engine.addEasing(engine_1.EasingType.easeOutExpo, value => (value === 1 ? 1 : 1 - Math.pow(2, -10 * value)), false);
        await engine.addEasing(engine_1.EasingType.easeInOutExpo, value => {
            if (value === 1) {
                return !value ? 0 : 1;
            }
            else if (!value) {
                return 0;
            }
            else {
                return value < 0.5 ? 2 ** (20 * value - 10) / 2 : (2 - 2 ** (-20 * value + 10)) / 2;
            }
        }, false);
        await engine.refresh(refresh);
    }
});
